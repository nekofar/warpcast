openapi: 3.1.0

info:
  title: Warpcast API
  version: 1.0.0
  description: API for interacting with the Warpcast platform

servers:
  - url: https://api.warpcast.com
    description: Main API server
  - url: https://client.warpcccastt.com
    description: Client-side interface

tags:
  - name: User
    description: Operations related to user information and preferences
  - name: Feed
    description: Operations related to content feeds
  - name: Channels
    description: Operations related to channel management
  - name: Messaging
    description: Operations related to direct messages and casts

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  parameters:
    fidParam:
      name: fid
      in: query
      required: true
      schema:
        type: integer
      description: The user's FID (Farcaster ID)

    limitParam:
      name: limit
      in: query
      required: false
      schema:
        type: integer
      description: Maximum number of items to return

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    Unauthorized:
      description: Authentication is required or failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        status:
          type: integer

    OnboardingStateResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            state:
              $ref: '#/components/schemas/OnboardingState'
    OnboardingState:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        user:
          $ref: '#/components/schemas/User'
        hasOnboarding:
          type: boolean
        hasConfirmedEmail:
          type: boolean
        handledConnectAddress:
          type: boolean
        canRegisterUsername:
          type: boolean
        needsRegistrationPayment:
          type: boolean
        hasFid:
          type: boolean
        hasFname:
          type: boolean
        hasDelegatedSigner:
          type: boolean
        hasSetupProfile:
          type: boolean
        hasCompletedRegistration:
          type: boolean
        hasStorage:
          type: boolean
        handledPushNotificationsNudge:
          type: boolean
        handledContactsNudge:
          type: boolean
        handledInterestsNudge:
          type: boolean
        hasValidPaidInvite:
          type: boolean
        hasWarpcastWalletAddress:
          type: boolean
        hasPhone:
          type: boolean
        needsPhone:
          type: boolean
        sponsoredRegisterEligible:
          type: boolean
        geoRestricted:
          type: boolean
    UserByFidResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/UserWithExtras'
            collectionsOwned:
              type: array
              items: {}
            extras:
              $ref: '#/components/schemas/UserExtras'
    DirectCastInboxResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            hasArchived:
              type: boolean
            hasUnreadRequests:
              type: boolean
            requestsCount:
              type: integer
            conversations:
              type: array
              items:
                type: object
                properties:
                  conversationId:
                    type: string
                  name:
                    type: string
                  description:
                    type: string
                  photoUrl:
                    type: string
                  adminFids:
                    type: array
                    items:
                      type: integer
                  lastReadTime:
                    type: integer
                  lastMessage:
                    type: object
                    properties:
                      conversationId:
                        type: string
                      senderFid:
                        type: integer
                      messageId:
                        type: string
                      serverTimestamp:
                        type: integer
                      type:
                        type: string
                      message:
                        type: string
                      hasMention:
                        type: boolean
                      reactions:
                        type: array
                        items: {}
                      isPinned:
                        type: boolean
                      isDeleted:
                        type: boolean
                      senderContext:
                        $ref: '#/components/schemas/User'
                  isGroup:
                    type: boolean
                  createdAt:
                    type: integer
                  viewerContext:
                    type: object
                    properties:
                      category:
                        type: string
                      lastReadAt:
                        type: integer
                      muted:
                        type: boolean
                      manuallyMarkedUnread:
                        type: boolean
                      pinned:
                        type: boolean
                      unreadCount:
                        type: integer
                      unreadMentionsCount:
                        type: integer
    UserAppContextResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            context:
              type: object
              properties:
                canAddLinks:
                  type: boolean
                showConnectedApps:
                  type: boolean
                signerRequestsEnabled:
                  type: boolean
                prompts:
                  type: array
                  items: {}
                adminForChannelKeys:
                  type: array
                  items:
                    type: string
                modOfChannelKeys:
                  type: array
                  items:
                    type: string
                memberOfChannelKeys:
                  type: array
                  items:
                    type: string
                canEditAllChannels:
                  type: boolean
                canUploadVideo:
                  type: boolean
                statsigEnabled:
                  type: boolean
                shouldPromptForPushNotifications:
                  type: boolean
                shouldPromptForUserFollowsSyncContacts:
                  type: boolean
                castActions:
                  type: array
                  items:
                    $ref: '#/components/schemas/CastAction'
                canAddCastAction:
                  type: boolean
                enabledCastAction:
                  $ref: '#/components/schemas/CastAction'
                notificationTabsV2:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                enabledVideoAutoplay:
                  type: boolean
                regularCastByteLimit:
                  type: integer
                longCastByteLimit:
                  type: integer
                newUserStatus:
                  type: object
                country:
                  type: string
                higherClientEventSamplingRateEnabled:
                  type: boolean
    CastAction:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        octicon:
          type: string
        actionUrl:
          type: string
        action:
          type: object
          properties:
            actionType:
              type: string
            postUrl:
              type: string
    User:
      type: object
      properties:
        fid:
          type: integer
        username:
          type: string
        displayName:
          type: string
        pfp:
          $ref: '#/components/schemas/ProfilePicture'
        profile:
          $ref: '#/components/schemas/Profile'
        followerCount:
          type: integer
        followingCount:
          type: integer
        viewerContext:
          $ref: '#/components/schemas/ViewerContext'
    UserWithExtras:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            connectedAccounts:
              type: array
              items: {}
    ProfilePicture:
      type: object
      properties:
        url:
          type: string
          format: uri
        verified:
          type: boolean
    Profile:
      type: object
      properties:
        bio:
          $ref: '#/components/schemas/Bio'
        location:
          $ref: '#/components/schemas/Location'
    Bio:
      type: object
      properties:
        text:
          type: string
        mentions:
          type: array
          items: {}
        channelMentions:
          type: array
          items: {}
    Location:
      type: object
      properties:
        placeId:
          type: string
        description:
          type: string
    ViewerContext:
      type: object
      properties:
        following:
          type: boolean
        followedBy:
          type: boolean
        enableNotifications:
          type: boolean
        canSendDirectCasts:
          type: boolean
        hasUploadedInboxKeys:
          type: boolean
    UserExtras:
      type: object
      properties:
        fid:
          type: integer
        custodyAddress:
          type: string
        ethWallets:
          type: array
          items:
            type: string
        solanaWallets:
          type: array
          items:
            type: string
    UserPreferencesResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            preferences:
              type: object
              additionalProperties: true
    HighlightedChannelsResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            channels:
              type: array
              items:
                $ref: '#/components/schemas/Channel'
            viewerContext:
              type: object
              properties:
                defaultFeed:
                  type: string
    Channel:
      type: object
      properties:
        type:
          type: string
        key:
          type: string
        name:
          type: string
        imageUrl:
          type: string
        fastImageUrl:
          type: string
        feeds:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
        description:
          type: string
        followerCount:
          type: integer
        memberCount:
          type: integer
        showCastSourceLabels:
          type: boolean
        showCastTags:
          type: boolean
        sectionRank:
          type: integer
        subscribable:
          type: boolean
        publicCasting:
          type: boolean
        inviteCode:
          type: string
        headerImageUrl:
          type: string
        headerAction:
          type: object
          properties:
            title:
              type: string
            target:
              type: string
        headerActionMetadata:
          type: object
          additionalProperties: true
        viewerContext:
          type: object
          properties:
            following:
              type: boolean
            isMember:
              type: boolean
            hasUnseenItems:
              type: boolean
            favoritePosition:
              type: integer
            activityRank:
              type: integer
            canCast:
              type: boolean
    FeedItemsResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            items:
              type: array
              items:
                type: object
                additionalProperties: true
            latestMainCastTimestamp:
              type: integer
            feedTopSeenAtTimestamp:
              type: integer
            replaceFeed:
              type: boolean
    UserResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            user:
              $ref: '#/components/schemas/UserWithExtras'
            collectionsOwned:
              type: array
              items:
                type: object
            extras:
              type: object
              properties:
                fid:
                  type: integer
                custodyAddress:
                  type: string
                ethWallets:
                  type: array
                  items:
                    type: string
                solanaWallets:
                  type: array
                  items:
                    type: string
    SuggestedUsersResponse:
      type: object
      properties:
        result:
          type: object
          properties:
            users:
              type: array
              items:
                type: object
                additionalProperties: true
            next:
              type: object
              properties:
                cursor:
                  type: string
    Action:
      type: object
      properties:
        name:
          type: string
        icon:
          type: string
        description:
          type: string
        aboutUrl:
          type: string
          format: uri
        actionUrl:
          type: string
          format: uri
        action:
          type: object
          properties:
            actionType:
              type: string
              enum: [post, get, put, delete]
            postUrl:
              type: string
              format: uri
    SuccessResponse:
      type: object
      required:
        - result
      properties:
        result:
          type: object
          required:
            - success
          properties:
            success:
              type: boolean
              description: Indicates whether the operation was successful
    VerifiedAddress:
      type: object
      properties:
        fid:
          type: integer
        address:
          type: string
        timestamp:
          type: integer
        version:
          type: string
        protocol:
          type: string
        isPrimary:
          type: boolean
        labels:
          type: array
          items:
            type: string

paths:
  /v2/onboarding-state:
    $ref: './paths/v2/onboarding-state.yaml'

  /v2/user-by-fid:
    $ref: './paths/v2/user-by-fid.yaml'

  /v2/direct-cast-inbox:
    $ref: './paths/v2/direct-cast-inbox.yaml'

  /v2/user-app-context:
    $ref: './paths/v2/user-app-context.yaml'

  /v2/user-preferences:
    $ref: './paths/v2/user-preferences.yaml'

  /v2/highlighted-channels:
    $ref: './paths/v2/highlighted-channels.yaml'

  /v2/feed-items:
    $ref: './paths/v2/feed-items.yaml'

  /v2/user:
    $ref: './paths/v2/user.yaml'

  /v2/user-following-channels:
    $ref: './paths/v2/user-following-channels.yaml'

  /v2/suggested-users:
    get:
      operationId: getSuggestedUsers
      summary: Get suggested users
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
        - name: randomized
          in: query
          schema:
            type: boolean
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of suggested users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestedUsersResponse'

  /v1/favorite-frames:
    get:
      operationId: getUserFavoriteFrames
      summary: Get user's favorite frames
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of favorite frames
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      frames:
                        type: array
                        items:
                          type: object
                          additionalProperties: true

  /v2/user-by-username:
    get:
      operationId: getUserByUsername
      summary: Get user by username
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of user by username
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /v2/channel-streaks:
    get:
      operationId: getChannelStreaksForUser
      summary: Get channel streaks for user
      parameters:
        - name: fid
          in: query
          required: true
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of channel streaks
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    additionalProperties: true

  /v2/unseen:
    get:
      operationId: getUnseenCounts
      summary: Get unseen counts and feed state
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of unseen feed and notification data
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      notificationsCount:
                        type: integer
                      notificationTabs:
                        type: array
                        items:
                          type: object
                          properties:
                            tab:
                              type: string
                            unseenCount:
                              type: integer
                      inboxCount:
                        type: integer
                      channelFeeds:
                        type: array
                        items:
                          type: object
                          properties:
                            channelKey:
                              type: string
                            feedType:
                              type: string
                            hasNewItems:
                              type: boolean
                      warpTransactionCount:
                        type: integer

  /v2/user-thread-casts:
    get:
      operationId: getUserThreadCasts
      summary: Get casts from a user thread
      parameters:
        - name: castHashPrefix
          in: query
          required: true
          schema:
            type: string
        - name: username
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of user thread casts
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      casts:
                        type: array
                        items:
                          type: object
                          additionalProperties: true

  /v2/channel-followers-you-know:
    get:
      operationId: getChannelFollowersYouKnow
      summary: Get mutual followers in a channel
      parameters:
        - name: channelKey
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of known channel followers
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          type: object
                          additionalProperties: true
                      totalCount:
                        type: integer

  /v2/mark-all-notifications-read:
    put:
      operationId: markAllNotificationsRead
      summary: Mark all notifications as read
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
      responses:
        '200':
          description: Successful mark-all-read operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      success:
                        type: boolean

  /v1/notifications-for-tab:
    get:
      operationId: getNotifications
      summary: Get notifications for a specific tab
      description: Returns a list of notifications for the specified tab.
      parameters:
        - in: query
          name: tab
          required: true
          schema:
            type: string
            enum: [all, follows, reactions, mentions, replies]
          description: Notification tab type
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 15
            minimum: 1
            maximum: 100
          description: Number of notifications to return
      responses:
        '200':
          description: A list of notifications
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      notifications:
                        type: array
                        items:
                          type: object
                          description: Notification item
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
      security:
        - bearerAuth: []

  /v2/set-last-checked-timestamp:
    put:
      operationId: setLastCheckedTimestamp
      summary: Set last checked timestamp
      description: Updates the last checked timestamp for notifications.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Empty object for now
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      success:
                        type: boolean
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
      security:
        - bearerAuth: []

  /v2/direct-cast-conversation:
    get:
      operationId: getDirectCastConversation
      summary: Get direct cast conversation
      description: Fetches a direct cast conversation by conversationId.
      parameters:
        - in: query
          name: conversationId
          required: true
          schema:
            type: string
          description: Conversation ID in the format fid1-fid2
      responses:
        '200':
          description: A direct cast conversation object
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      conversation:
                        type: object
                        description: Conversation details (schema omitted for brevity)
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
      security:
        - bearerAuth: []

  /v2/discover-channels:
    get:
      operationId: discoverChannels
      summary: Discover channels
      description: Retrieves a list of discoverable channels with optional limit.
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 15
            minimum: 1
            maximum: 100
          description: Maximum number of channels to retrieve
      responses:
        '200':
          description: A list of channels
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      channels:
                        type: array
                        items:
                          type: object
                          description: Channel details (schema omitted for brevity)
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
      security:
        - bearerAuth: []

  /v2/invites-available:
    get:
      operationId: getAvailableInvites
      summary: Check available invites
      description: Returns the number of allocated and currently available invites.
      responses:
        '200':
          description: Invite count information
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      allocatedInvitesCount:
                        type: integer
                        description: Total number of invites allocated to the user
                      availableInvitesCount:
                        type: integer
                        description: Number of invites currently available to send
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
      security:
        - bearerAuth: []

  /v2/warpcast-sponsored-invites:
    get:
      operationId: getSponsoredInvites
      summary: Get sponsored invites
      description: Returns a list of Warpcast-sponsored invites available to the user.
      responses:
        '200':
          description: List of sponsored invites
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      invites:
                        type: array
                        items:
                          type: object
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
      security:
        - bearerAuth: []

  /v2/rewards-leaderboard:
    get:
      operationId: getRewardsLeaderboard
      summary: Get rewards leaderboard
      description: Returns a list of users in the rewards leaderboard based on invite activity.
      parameters:
        - name: rewardsType
          in: query
          required: true
          schema:
            type: string
            enum: [invite]
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Rewards leaderboard
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      leaderboard:
                        type: object
                        properties:
                          type:
                            type: string
                          users:
                            type: array
                            items:
                              type: object
                              properties:
                                user:
                                  type: object
                                score:
                                  type: integer
                                rank:
                                  type: integer
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
      security:
        - bearerAuth: []

  /v2/rewards-scores-for-user:
    get:
      operationId: getUserRewardsScores
      summary: Get invite rewards scores for a user
      description: Returns current, previous, and all-time invite rewards scores for the specified user.
      parameters:
        - name: rewardsType
          in: query
          required: true
          schema:
            type: string
            enum: [invite]
        - name: fid
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User rewards scores
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      scores:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                            user:
                              type: object
                            allTimeScore:
                              type: integer
                            currentPeriodScore:
                              type: integer
                            previousPeriodScore:
                              type: integer
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
      security:
        - bearerAuth: []

  /v2/rewards-metadata:
    get:
      operationId: getRewardsMetadata
      summary: Get invite rewards metadata
      description: Returns metadata for the invite rewards program including the reward period and reward distribution details.
      parameters:
        - name: rewardsType
          in: query
          required: true
          schema:
            type: string
            enum: [invite]
      responses:
        '200':
          description: Invite rewards metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      metadata:
                        type: object
                        properties:
                          type:
                            type: string
                          lastUpdateTimestamp:
                            type: integer
                          currentPeriodStartTimestamp:
                            type: integer
                          currentPeriodEndTimestamp:
                            type: integer
                          tiers:
                            type: array
                            items: {}
                          proportionalPayout:
                            type: object
                            properties:
                              numWinners:
                                type: integer
                              totalRewardCents:
                                type: integer
        '401':
          description: Unauthorized
        '429':
          description: Too many requests
      security:
        - bearerAuth: []

  /v2/bookmarked-casts:
    get:
      operationId: getBookmarkedCasts
      summary: Get bookmarked casts
      description: Returns the most recent casts bookmarked by the user.
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 15
      responses:
        '200':
          description: A list of bookmarked casts
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      bookmarks:
                        type: array
                        items:
                          type: object
      security:
        - bearerAuth: []

  /v2/starter-packs:
    get:
      operationId: getUserStarterPacks
      summary: Get starter packs
      description: Returns starter packs created by a specific user.
      parameters:
        - name: fid
          in: query
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 15
      responses:
        '200':
          description: A list of starter packs
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      starterPacks:
                        type: array
                        items:
                          type: object

  /v2/starter-packs/suggested:
    get:
      operationId: getSuggestedStarterPacks
      summary: Get suggested starter packs
      description: Returns a list of suggested starter packs.
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 15
      responses:
        '200':
          description: A list of suggested starter packs
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      starterPacks:
                        type: array
                        items:
                          type: object

  /v2/starter-pack:
    get:
      operationId: getStarterPack
      summary: Get a specific starter pack by ID
      description: Returns a specific starter pack.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A starter pack object
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      starterPack:
                        type: object

  /v2/starter-pack-users:
    get:
      operationId: getStarterPackUsers
      summary: Get users in a specific starter pack
      description: Returns a list of users associated with a given starter pack.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: List of users in the starter pack
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          type: object

  /v2/channel:
    get:
      operationId: getChannel
      summary: Get channel details
      description: Returns metadata about a channel.
      parameters:
        - name: key
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel metadata
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      channel:
                        type: object

  /v1/channel-users:
    get:
      operationId: getChannelUsers
      summary: Get members of a specific channel
      description: Returns users who are members of a specific channel.
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: channelKey
          in: query
          required: true
          schema:
            type: string
        - name: filterToMembers
          in: query
          required: false
          schema:
            type: boolean
        - name: query
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of users in the specified channel
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          type: object

  /v2/following:
    get:
      operationId: getFollowing
      summary: Get users a given user is following
      description: Returns a list of users followed by a specified FID.
      parameters:
        - name: fid
          in: query
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of followed users
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          type: object

  /v2/followers:
    get:
      operationId: getFollowers
      summary: Get users following a given user
      description: Returns a list of users who follow the specified FID.
      parameters:
        - name: fid
          in: query
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of followers
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          type: object

  /v2/followers-you-know:
    get:
      operationId: getMutualFollowers
      summary: Get mutual followers of a given user
      description: Returns a list of users who follow the given FID and are followed by the viewer.
      parameters:
        - name: fid
          in: query
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of mutual followers
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          type: object
                      totalCount:
                        type: integer

  /v1/top-frameapps:
    get:
      operationId: getTopFrameApps
      summary: Get top FrameApps
      description: Returns a list of top FrameApps with optional pagination.
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: cursor
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of FrameApps
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      frames:
                        type: array
                        items:
                          type: object

  /v2/verifications:
    $ref: './paths/v2/verifications.yaml'

  /v2/get-muted-keywords:
    get:
      operationId: getMutedKeywords
      summary: Get muted keywords
      description: Returns a list of muted keywords for the authenticated user.
      responses:
        '200':
          description: A list of muted keywords
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: object
                    properties:
                      keywords:
                        type: array
                        items:
                          type: string
                      mutedKeywords:
                        type: array
                        items:
                          type: string

  /v2/mute-keyword:
    post:
      operationId: muteKeyword
      summary: Mute a keyword
      description: Mutes a keyword for the authenticated user with specified properties.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword:
                  type: string
                properties:
                  type: object
                  properties:
                    channels:
                      type: boolean
                    frames:
                      type: boolean
                    notifications:
                      type: boolean
      responses:
        '200':
          description: The muted keyword and its settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: object
                    properties:
                      keywords:
                        type: array
                        items:
                          type: string
                      mutedKeywords:
                        type: array
                        items:
                          type: object
                          properties:
                            keyword:
                              type: string
                            properties:
                              type: object
                              properties:
                                frames:
                                  type: boolean
                                channels:
                                  type: boolean
                                notifications:
                                  type: boolean

  /v2/unmute-keyword:
    post:
      operationId: unmuteKeyword
      summary: Unmute a keyword
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keyword:
                  type: string
      responses:
        '200':
          description: Keyword unmuted
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  result:
                    type: object
                    properties:
                      keywords:
                        type: array
                        items:
                          type: string
                      mutedKeywords:
                        type: array
                        items:
                          type: object
                          properties:
                            keyword:
                              type: string
                            properties:
                              type: object
                              properties:
                                channels:
                                  type: boolean
                                frames:
                                  type: boolean
                                notifications:
                                  type: boolean

  /v2/cast-likes:
    $ref: './paths/v2/cast-likes.yaml'

  /v2/recasts:
    put:
      summary: Recast a cast
      operationId: recastCast
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - castHash
              properties:
                castHash:
                  type: string
                  example: '0x0bb901f364673e86adfc0ed4c14ececb8d9b9d27'

      responses:
        '200':
          description: Recast response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      castHash:
                        type: string
                        example: '0x750a7269b4a3b70e28d3f450df33487047d4927f'
    delete:
      summary: Undo recast
      operationId: undoRecast
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - castHash
              properties:
                castHash:
                  type: string
                  example: '0x0bb901f364673e86adfc0ed4c14ececb8d9b9d27'

      responses:
        '200':
          description: Undo recast response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      success:
                        type: boolean
                        example: true

  /v2/cast-attachments:
    put:
      summary: Attach embeds to a cast
      operationId: attachEmbeds
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                embeds:
                  type: array
                  items:
                    type: string
                    format: uri

      responses:
        '200':
          description: Attachment response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object

  /v2/cast-recasters:
    get:
      summary: Get cast recasters
      operationId: getCastRecasters
      security:
        - bearerAuth: []
      parameters:
        - name: castHash
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 15
      responses:
        '200':
          description: A list of users who recasted the cast
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      users:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'

  /v2/cast-quotes:
    get:
      summary: Get quotes of a cast
      operationId: getCastQuotes
      security:
        - bearerAuth: []
      parameters:
        - name: castHash
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 15
      responses:
        '200':
          description: A list of quote casts referencing the given cast
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      quotes:
                        type: array
                        items:
                          type: object
                          properties:
                            hash:
                              type: string
                            threadHash:
                              type: string
                            parentSource:
                              type: object
                              properties:
                                type:
                                  type: string
                                url:
                                  type: string
                            author:
                              $ref: '#/components/schemas/User'
                            text:
                              type: string
                            timestamp:
                              type: integer

  /v2/me:
    get:
      operationId: getCurrentUser
      summary: Get current user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful retrieval of current user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'

  /v2/search-channels:
    get:
      summary: Search for channels
      operationId: searchChannels
      security:
        - bearerAuth: []
      parameters:
        - name: q
          in: query
          required: false
          schema:
            type: string
        - name: prioritizeFollowed
          in: query
          required: false
          schema:
            type: boolean
            default: true
        - name: forComposer
          in: query
          required: false
          schema:
            type: boolean
            default: false
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 40
      responses:
        '200':
          description: A list of matched channels
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      channels:
                        type: array
                        items: {}

  /v2/draft-caststorms:
    get:
      summary: Get draft cast storms
      operationId: getDraftCasts
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 15
      responses:
        '200':
          description: A list of draft cast storms
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      drafts:
                        type: array
                        items: {}
    post:
      summary: Create a new draft casts
      operationId: createDraftCasts
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                caststorm:
                  type: object
                  properties:
                    casts:
                      type: array
                      items:
                        type: object
                        properties:
                          text:
                            type: string
                          embeds:
                            type: array
                            items: {}
      parameters:
        - name: idempotency-key
          in: header
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Created draft caststorm
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      draft:
                        type: object
                        properties:
                          draftId:
                            type: string
                          casts:
                            type: array
                            items:
                              type: object
                              properties:
                                text:
                                  type: string
                                embeds:
                                  type: array
                                  items: {}

  /v2/casts:
    post:
      summary: Create a new cast
      operationId: createCast
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                embeds:
                  type: array
                  items: {}
                channelKey:
                  type: string
                  description: Optional channel to post the cast to
              required:
                - text

      responses:
        '200':
          description: Cast created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      cast:
                        type: object
                        properties:
                          hash:
                            type: string
                          threadHash:
                            type: string
                          text:
                            type: string
                          timestamp:
                            type: integer
                          embeds:
                            type: object
                            properties:
                              images:
                                type: array
                                items: {}
                              urls:
                                type: array
                                items: {}
                              videos:
                                type: array
                                items: {}
                              unknowns:
                                type: array
                                items: {}
    delete:
      summary: Delete a cast
      operationId: deleteCast
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                castHash:
                  type: string

      responses:
        '200':
          description: Cast deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      success:
                        type: boolean

  /v2/draft-casts:
    delete:
      summary: Delete a draft cast
      operationId: deleteDraftCast
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                draftId:
                  type: string

      responses:
        '200':
          description: Draft cast deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object

  /v2/all-channels:
    get:
      operationId: getAllChannels
      summary: Get all channels
      description: Returns a list of all channels on Warpcast
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      channels:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: string
                            url:
                              type: string
                            name:
                              type: string
                            description:
                              type: string
                            descriptionMentions:
                              type: array
                              items:
                                type: integer
                            descriptionMentionsPositions:
                              type: array
                              items:
                                type: integer
                            imageUrl:
                              type: string
                            headerImageUrl:
                              type: string
                            leadFid:
                              type: integer
                            moderatorFids:
                              type: array
                              items:
                                type: integer
                            createdAt:
                              type: integer
                            followerCount:
                              type: integer
                            memberCount:
                              type: integer
                            pinnedCastHash:
                              type: string
                            publicCasting:
                              type: boolean
                            externalLink:
                              type: object
                              properties:
                                title:
                                  type: string
                                url:
                                  type: string

  /v1/channel:
    get:
      operationId: getChannelDetails
      summary: Get details of a specific channel
      parameters:
        - name: channelId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Channel details
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
                    properties:
                      channel:
                        $ref: '#/components/schemas/Channel'

  /v1/channel-followers:
    get:
      operationId: getChannelFollowers
      summary: Get followers of a channel
      parameters:
        - name: channelId
          in: query
          required: true
          schema:
            type: string
          description: The ID of the channel
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Cursor for pagination
      responses:
        '200':
          description: A list of channel followers
          content:
            application/json:
              example:
                result:
                  users:
                    - fid: 466624
                      followedAt: 1712685183
                    - fid: 469283
                      followedAt: 1712685067
                next:
                  cursor: 'eyJwYWdlIjoxfQ=='

  /v1/user-following-channels:
    get:
      operationId: getUserFollowedChannels
      summary: Get list of channels followed by a user
      parameters:
        - in: query
          name: fid
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful response with list of channels followed by the user
          content:
            application/json:
              example:
                result:
                  channels:
                    - id: fc-updates
                      url: https://warpcast.com/~/channel/fc-updates
                      name: fc-updates
                      description: Important updates about things happening in Farcaster
                      imageUrl: https://i.imgur.com/YnnrPaH.png
                      leadFid: 2
                      moderatorFid: 5448
                      moderatorFids:
                        - 5448
                        - 3
                      createdAt: 1712162074
                      followerCount: 17034
                      followedAt: 1712162620
                next:
                  cursor: '...'

  /v1/user-channel:
    get:
      operationId: checkUserChannelFollowStatus
      summary: Check if a user is following a channel
      parameters:
        - in: query
          name: fid
          schema:
            type: integer
          required: true
        - in: query
          name: channelId
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Successful response with follow status
          content:
            application/json:
              example:
                result:
                  following: true
                  followedAt: 1687943747

  /fc/channel-members:
    $ref: './paths/fc/channel-members.yaml'

  /fc/channel-invites:
    $ref: './paths/fc/channel-invites.yaml'

  /fc/moderated-casts:
    $ref: './paths/fc/moderated-casts.yaml'

  /fc/channel-restricted-users:
    $ref: './paths/fc/channel-restricted-users.yaml'

  /fc/channel-bans:
    $ref: './paths/fc/channel-bans.yaml'

  /fc/channel-follows:
    $ref: './paths/fc/channel-follows.yaml'

  /fc/moderate-cast:
    $ref: './paths/fc/moderate-cast.yaml'

  /fc/pinned-casts:
    $ref: './paths/fc/pinned-casts.yaml'

  /v2/discover-actions:
    $ref: './paths/v2/discover-actions.yaml'

  /v2/discover-composer-actions:
    $ref: './paths/v2/discover-composer-actions.yaml'

  /fc/blocked-users:
    $ref: './paths/fc/blocked-users.yaml'

  /fc/account-verifications:
    $ref: './paths/fc/account-verifications.yaml'

  /v1/creator-rewards-winner-history:
    $ref: './paths/v1/creator-rewards-winner-history.yaml'

  /fc/primary-address:
    $ref: './paths/fc/primary-address.yaml'

  /fc/primary-addresses:
    $ref: './paths/fc/primary-addresses.yaml'

  /fc/starter-pack-members:
    $ref: './paths/fc/starter-pack-members.yaml'

  /v2/ext-send-direct-cast:
    $ref: './paths/v2/ext-send-direct-cast.yaml'
