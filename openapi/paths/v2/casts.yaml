get:
  summary: Retrieve casts for a specific user
  operationId: getCastsByFid
  tags:
    - Casts
  security:
    - bearerAuth: []
  parameters:
    - $ref: '../../components/parameters/index.yaml#/fidParam'
    - $ref: '../../components/parameters/index.yaml#/limitParam'
  responses:
    '200':
      description: Successfully retrieved casts
      content:
        application/json:
          schema:
            type: object
            properties:
              result:
                type: object
                properties:
                  casts:
                    type: array
                    items:
                      $ref: '../../index.yaml#/components/schemas/Cast'
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '../../index.yaml#/components/schemas/ErrorResponse'
    '401':
      $ref: '../../components/responses/index.yaml#/Unauthorized'
    '429':
      $ref: '../../components/responses/index.yaml#/TooManyRequests'

post:
  summary: Create a new cast
  operationId: createCast
  tags:
    - Casts
  security:
    - bearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - text
          properties:
            text:
              type: string
              description: The text content of the cast
              minLength: 1
              maxLength: 320
            embeds:
              type: array
              description: Optional array of embeds (URLs, images, etc.)
              items:
                type: object
                description: Embed object
                additionalProperties: true
            channelKey:
              type: string
              description: Optional channel to post the cast to
              example: "farcaster"
  responses:
    '200':
      description: Cast created successfully
      content:
        application/json:
          schema:
            $ref: '../../index.yaml#/components/schemas/CastCreatedResponse'
    '400':
      $ref: '../../components/responses/index.yaml#/BadRequest'
    '401':
      $ref: '../../components/responses/index.yaml#/Unauthorized'
    '429':
      $ref: '../../components/responses/index.yaml#/TooManyRequests'

delete:
  summary: Delete a cast
  operationId: deleteCast
  tags:
    - Casts
  security:
    - bearerAuth: []
  requestBody:
    required: true
    content:
      application/json:
        schema:
          type: object
          required:
            - castHash
          properties:
            castHash:
              type: string
              description: The hash of the cast to delete
              pattern: '^0x[a-fA-F0-9]{40}$'
              example: "0xabcdef1234567890abcdef1234567890abcdef12"
  responses:
    '200':
      description: Cast deleted successfully
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/index.yaml#/SuccessResponse'
    '400':
      $ref: '../../components/responses/index.yaml#/BadRequest'
    '401':
      $ref: '../../components/responses/index.yaml#/Unauthorized'
    '404':
      $ref: '../../components/responses/index.yaml#/NotFound'
    '429':
      $ref: '../../components/responses/index.yaml#/TooManyRequests'
